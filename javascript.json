{
    // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "then-node": {
        "prefix": "sx.thnn",
        "body": [
            ".then(function (d) {",
            "res.json(d);",
            "}, function (err) {",
            "utils.respondToError(res, err, 'Error in $1' + controllerName);",
            "});"
        ],
        "description": "then"
    },
    "then-simple": {
        "prefix": "sx.thnjs",
        "body": [
            ".then(function (d) {",
            "console.log('d=',d);",
            "}, function (err) {",
            "console.log('Error in $1',err);",
            "});"
        ],
        "description": "then"
    },
    "log js error": {
        "prefix": "sx.errjs",
        "body": [
            "console.log('Error in $1',err);",
        ],
        "description": "log error"
    },
    "log2": {
        "prefix": "cll",
        "body": [
            "console.warn('$1=',$1);",
        ],
        "description": "log variable value"
    },
    "return promise": {
        "prefix": "sx.rp",
        "body": [
            "return new Promise(function (resolve, reject) {});",
        ],
        "description": "return new promise"
    },
    "respond to error": {
        "prefix": "sx.errn",
        "body": [
            "utils.respondToError(res, err, 'Error in ' + controllerName);",
        ],
        "description": "respond to error from node"
    },
    "create ng controller": {
        "prefix": "sx.ng.c",
        "body": [
            "//main controller - $1Controller",
            "(function () {",
            "    'use strict';",
            "    angular.module('mainapp').controller('$1Controller', $1Controller);",
            "    $1Controller.$inject = ['$$scope', 'appData'];",
            "",
            "    function $1Controller($$scope, appData) {",
            "        var ctrl = this;",
            "        ctrl.init = init;",
            "",
            "        function init() {",
            "            console.log('in $1Controller');",
            "        }",
            "    }",
            "})();",
        ],
        "description": "create ng controller"
    },
    "create ng factory": {
        "prefix": "sx.ng.f",
        "body": [
            "//factory appCart",
            "(function () {",
            "    'use strict';",
            "    angular.module('mainapp').factory('$1', $1);",
            "    $1.$inject = ['appGlobal', '$$localStorage'];",
            "",
            "    function $1(appGlobal, $$localStorage) {",
            "        var service = {",
            "            init: init",
            "        };",
            "",
            "        return service;",
            "",
            "        function init() {",
            "            return '';",
            "        }",
            "    }",
            "})();",
        ],
        "description": "create ng factory"
    }

}